#+STARTUP: overview indent
#+OPTIONS: ^:nil

* 17/06/2024
** Objetivos:
*** "Instalar" (?) o Chameleon no PCAD - OK
*** Escrever um código para executar Cholesky no Chameleon dentro do PCAD - ok
**** Tem um código disponível no próprio getting started do Chameleon
*** Compilar o código do Cholesky - não rolou
/usr/bin/ld: warning: libstarpumpi-1.3.so.3, needed by /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so, not found (try using -rpath or -rpath-link)
/usr/bin/ld: warning: libstarpu-1.3.so.8, needed by /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so, not found (try using -rpath or -rpath-link)
/usr/bin/ld: warning: libopenblas.so.0, needed by /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so, not found (try using -rpath or -rpath-link)
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slarfb_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlaset_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ctrmv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_init_conf'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zswap'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zsymm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_timing_timespec_to_us'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_resume'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_spotrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cgeru'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_timing_now'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_sgemm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_sgemv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slarfg_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slaset_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slarft_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_free_on_node_flags'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zgemm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_cpotrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_profiling_status_set'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clacgv_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_dlamch_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_get_interface_on_node'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_dbdsqr'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_csymm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zpotrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cher2k'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_bound_stop'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_comm_rank'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_chbtrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_hash_crc32c_be'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_interface_get_next_id'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_zhbtrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_cstedc'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlansy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cgerc'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_claset_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ctrmm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `cblas_sscal'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_strmm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_wont_use'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlacgv_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_worker_get_count'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zcopy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dsyrk'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cherk'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zherk'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_data_register_comm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_node_get_kind'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ztrmv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_timing_timespec_delay_us'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_interface_data_copy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dswap'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_scopy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zgelq2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_sgeqr2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zscal'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_sstedc'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clange_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_execute_on_each_worker'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_iteration_push'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cscal'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_dstedc'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_caxpy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zsyr2k'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_malloc_on_node_flags'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zgetf2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clarft_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ssyr2k'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_cgetf2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_csyr2k'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_interface_datatype_unregister'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ztrsm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_codelet_unpack_args'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_wait_for_all'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ctrsm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_cgeqr2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ssymm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlaset_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dtrtri_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dgetf2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_data_migrate'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zher2k'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_sgbbrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_saxpy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_claswp_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_malloc_on_node'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_interface_datatype_register'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_cache_flush'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_zgbbrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlarfb_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `cblas_idamax'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slaswp_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dger'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slauum_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_profiling_bus_helper_display_summary'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clanhe_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slascl_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlarfb_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlange_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlarfg_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_dsbtrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clansy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_task_nsubmitted'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlange_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_unregister_submit'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ssyrk'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_cgetrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_strmv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clarfg_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_dgbbrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlacpy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dgemv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlansy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_cgelq2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_task_wait_for_all'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_strtri_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clacpy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cgemm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlarfg_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_slamch_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_sswap'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_sgetrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clarfb_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dtrmv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_data_get_rank'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_comm_size'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_cbdsqr'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `cblas_isamax'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clauum_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_sgelq2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlaswp_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_pause'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_free_flags'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_sbdsqr'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zaxpy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dcopy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_cache_flush_all_data'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_strsm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_sgetf2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_iteration_pop'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_cgbbrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zgeqr2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_task_get_current'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlaswp_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_izamax'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_chemm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zgeru'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_acquire'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dgelq2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_interface_copy2d'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slange_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlarft_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_register'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_sger'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_ctrtri_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_zstedc'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlascl_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dsymm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ztrmm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dgeqr2_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_cached_receive'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlascl_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dtrmm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zgerc'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dsyr2k'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_profiling_worker_get_info'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dgetrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slansy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlarft_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_zbdsqr'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_icamax'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zgemv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zhemm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cgemv'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_set_ooc_flag'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_comm_get_attr'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_ztrtri_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dlauum_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_is_initialized'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_conf_init'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_worker_get_name'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_clascl_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_unregister'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_slacpy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_insert_task'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_release'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_worker_get_id'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `cblas_dscal'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_data_set_coordinates'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_malloc_on_node_set_default_flags'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dgemm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_dtrsm'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_barrier'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlauum_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_ccopy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_zsyrk'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_free_on_node'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zgetrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlacpy_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_mpi_shutdown'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_malloc_flags'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon.so: undefined reference to `LAPACKE_ssbtrd'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_cswap'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_daxpy'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_dpotrf_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `cblas_csyrk'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_bound_start'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libcoreblas.so: undefined reference to `LAPACKE_zlanhe_work'
/usr/bin/ld: /home/users/lbassis/spack/opt/spack/linux-debian12-broadwell/gcc-12.2.0/chameleon-1.1.0-xo2g47ybv52ukcuma72gpn2ictw26d2s/lib/libchameleon_starpu.so: undefined reference to `starpu_worker_get_count_by_type'
collect2: error: ld returned 1 exit status
make: *** [Makefile:15: all] Error 1
*** Descobrir como criar matrizes aleatórias com o Chameleon - +- OK
**** Não é necessário! O plgsy tem como último argumento uma seed, então a princípio consigo criar sempre a mesma matriz
**** Melhor printar duas matrizes com a mesma seed em dois computadores diferentes só pra garantir
*** Rodar um teste com StarPU - não rolou
* 18/06/2024
** Objetivos:
*** Compilar o código do Cholesky - OK!
**** Falei com o Nesi e ele sugeriu usar o spack view pra colocar todas as dependências numa mesma pasta (spack view soft chameleon chameleon)
**** O fato de eu ter mudado o diretório do spack zuou o uso desse view (e possivelmente outras funções do spack). Reinstalei tudo direto na pasta certa
**** Funcionou! Usando `spack view soft chameleon chameleon` eu criei uma pasta chamada 'chameleon' com todos os headers e bibliotecas necessários que usei no Makefile
**** IMPORTANTE: não esquecer de adicionar o diretório das bibliotecas dinâmicas no LD_LIBRARY_PATH
*** Rodar um teste com StarPU
**** Não rolou ainda. Aparentemente o StarPU não tá reconhecendo o CUDA, porque se eu tento executar com NCPU = 0 e NGPU = 1, ele acusa "ENODEV" (no device?) na hora de inserir a tarefa
**** Parece que o StarPU foi compilado sem um define STARPU_USE_CUDA e ainda não descobri como fazer isso. No momento, instalo o Chameleon com +cuda e cuda_arch=89 e o StarPU com +cuda
* 19/06/2024
** Objetivos:
*** Rodar um teste com StarPU - OK!!!
**** Não tem como rodar com NCPU = 0
*** Gerar um traço de execução - AINDA NÃO
**** STARPU_GENERATE_TRACE faz a aplicação ter um segfault e não tá respeitando o EXP_FOLDER
* 20/06/2024
** Objetivos:
*** Rastro: agora vai! FOI!!
**** Removendo o -o do starpu_fxt_tool ele funciona, mas agora vejo o erro
**** "Error in FromDataFrameNetwork(x) : Cannot find root name. network is not a tree!
**** Fazendo um grep por "root" no paje só encontrei MPIroot, então vou tentar reinstalar sem MPI
**** Tem que executar com mpirun!
**** O paje.sorted.trace.gz tá com tamanho 20 só
**** Testes manuais
./main
starpu_fxt_tool -i $EXP_FOLDER/prof_file_lbassis_0
gzip -c paje.trace activity.data dag.dot data.rec distrib.data tasks.rec trace.html trace.rec > paje.trace.gz
$STARVZ_TOOLS/paje_sort.sh false paje.trace.gz | sed 's/""/"x"/g' | gzip -c > paje.sorted.trace.gz

**** Plotando o rastro!!
#+begin_src R :results output :session *R* :exports both
library(starvz)
data <- starvz_read("pcad/")
plot <- starvz_plot(data)
plot
#+end_src
	
#+RESULTS:

**** Problemas:
O starpu_fxt_tool não pode usar o -o
A linha do gzip tem que listar todos os arquivos
O sorted com poti = false não tava funcionando por algum motivo
	
* 21/06/2024
** Objetivos:
*** Rodar sem usar CPU
**** Tentando fazer um patch no spack pra tirar a adição dos codelets de cpu: vi ../spack/var/spack/repos/builtin/packages/chameleon/package.py -> patch('...') [[https://stackoverflow.com/questions/77399954/how-to-apply-a-patch-to-a-spack-package][ref]]
* 09/07/2024
** Objetivos:
*** Definir tamanho da matriz que vou rodar
**** tupi1/tupi2:
***** Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz
***** L1d:                  256 KiB (8 instances)
***** L1i:                  256 KiB (8 instances)
***** L2:                   2 MiB (8 instances)
***** L3:                   20 MiB (1 instance)
**** tupi3/tupi4:
*****  Intel(R) Core(TM) i9-14900KF
***** L1d:                    896 KiB (24 instances)
***** L1i:                    1.3 MiB (24 instances)
***** L2:                     32 MiB (12 instances)
***** L3:                     36 MiB (1 instance)
**** RTX 4090:
***** 24564MiB
**** Calculando pela GPU:
***** Total: 24GB
***** Double: 8 bytes
***** Armazenável = 24x10^9/8 = 3x10^9 elementos
***** NRHS = 1000
***** N =~ 100k
*** Ler sobre Cholesky
**** Muito complexo! Vamos de LU
* 10/07/2024
** Objetivos:
*** Definir experimentos!
**** Usando o máximo de memória da GPU (N = 100k):
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
**** Usando o máximo que cabe na L1 da menor CPU (N = ?)
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
**** Usando o máximo que cabe na L1 da maior CPU (N = ?)
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
**** Usando o máximo que cabe na L2 da menor CPU (N = ?)
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
**** Usando o máximo que cabe na L2 da maior CPU (N = ?)
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
**** Usando o máximo que cabe na L3 da menor CPU (N = ?)
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
**** Usando o máximo que cabe na L3 da maior CPU (N = ?)
****** Clocks iguais, número de processos igual
****** Clocks iguais, máximo de processos possível
****** Maior clock possível, número de processos igual
****** Maior clock possível, máximo de processos possível
* 15/07/2024
** Objetivos:
*** Definir tamanho da matriz que vou rodar
**** Usar um N no mínimo 8x maior que o NB pra usar os núcloes da tupi1/tupi2
**** Usar um N no mínimo 24x maior que o NB pra usar os 24 núcleos do da tupi3/tupi4
**** tupi1/tupi2:
***** Intel(R) Xeon(R) CPU E5-2620 v4 @ 2.10GHz
***** L1d:                  256 KiB (8 instances)
***** L1i:                  256 KiB (8 instances)
***** L2:                   2 MiB (8 instances)
***** L3:                   20 MiB (1 instance)
***** Dentro da L1: 1024(KiB) * 256 / 4 (float size) = 65536 = 256*256
***** Dentro da L2: 8*L1 = 262144 elementos = 512x512 
***** Dentro da L3: 10*L2 = 2621440 elementos = 1619x1619
***** 2^5 - 2^12


**** tupi3/tupi4:
*****  Intel(R) Core(TM) i9-14900KF
***** L1d:                    896 KiB (24 instances)
***** L1i:                    1.3 MiB (24 instances)
***** L2:                     32 MiB (12 instances)
***** L3:                     36 MiB (1 instance)
*** Primeiros experimentos:
***** Testando a capacidade da tupi2:
:PROPERTIES:
:header-args: :tangle tupi_cpu_capacity.sh :tangle-mode (identity #o755) :shebang "#!/usr/bin/bash"
:END:
#+begin_src bash :exports both
HOSTNAME=$(hostname)
OUTPUT_FILE=$(date +%d-%m_%H%M)
OUTPUT_FILE="experiments/${OUTPUT_FILE}_${HOSTNAME}.csv"
NCPU = $1
NGPU = $2
SIZE = $3

echo "NCPU,NGPU,N,NB,t" > ${OUTPUT_FILE}

for i in 64 128 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5
    do
	echo "Test ${j}/5 with block size ${i}"
	./main ${NCPU} ${NGPU} ${SIZE} ${i} >> ${OUTPUT_FILE}
    done
done
#+end_src

df <- read.csv('15-07_1038_tupi2.txt', sep=" ", header=TRUE)
plot = df |> group_by(NCPU, NGPU, N, NB) |> summarise(avg_t = mean(t)) |> ggplot (aes(x=NB, y=avg_t)) + geom_point() + ggtitle("tupi2") + labs(x="Block size", y="Average time (s)") + scale_x_continuous(breaks=unique(df$NB))
ggsave("plot.pdf", plot)

* 17/07/2024 (!!!)
** Analisando os primeiros experimentos
#+begin_src R :results output graphics file :file plot.pdf :session *R* :exports both 
library(dplyr)
library(ggplot2)

xeon_physical <- read.csv('apresentacao1/15-07_1936_tupi1.csv')
xeon_physical$CPU = 'xeon'

i9_physical <- read.csv('apresentacao1/15-07_2317_tupi4.csv')
i9_physical$CPU = 'i9'

xeon_virtual <- read.csv('apresentacao1/16-07_1234_tupi1.csv')
xeon_virtual$CPU = 'xeon'

i9_virtual <- read.csv('apresentacao1/16-07_2333_tupi4.csv')
i9_virtual$CPU='i9'

df <- bind_rows(xeon_physical, i9_physical, xeon_virtual, i9_virtual)
df |> group_by(NCPU, NGPU, N, NB, CPU) |> summarise(avg_t = mean(t)) |> print(n=100) -> df

# setting some columns as factors
#df$NB <- factor(df$NB, levels = c('128', '256', '512', '1024', '2048', '4096'))
#df$CPU <- factor(df$CPU, levels = c('xeon', 'i9'))

#***** Dentro da L1: 1024(KiB) * 256 / 4 (float size) = 65536 = 256*256
#***** Dentro da L2: 8*L1 = 262144 elementos = 512x512 
#***** Dentro da L3: 10*L2 = 2621440 elementos = 1619x1619

# plotting only physical
df |> filter(NCPU == 8 | NCPU == 24) |>
  ggplot(aes(x = NB, y = avg_t, color = CPU)) +
  geom_point() +
  geom_line() +
  labs(x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  scale_x_continuous(breaks=c(128, 256, 512, 1024, 2048, 4096)) +
  geom_vline(xintercept = 256, linetype="dotted", color = "blue", size=.3) +
  geom_vline(xintercept = 512, linetype="dotted", color = "blue", size=.3) +
  geom_vline(xintercept = 1619, linetype="dotted", color = "blue", size=.3) +

  geom_vline(xintercept = 478, linetype="dotted", color = "red", size=.3) +
  geom_vline(xintercept = 2900, linetype="dotted", color = "red", size=.3) +
  theme_classic() -> physical_plot

# plotting with all cores
df |> filter(NCPU == 16 | NCPU == 32) |>
  ggplot(aes(x = NB, y = avg_t, color = CPU)) +
  geom_point(size=2) +
  geom_line() +
  labs(x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  scale_x_continuous(breaks=c(128, 256, 512, 1024, 2048, 4096)) +
  geom_vline(xintercept = 256, linetype="dotted", color = "blue", size=.3) +
  geom_vline(xintercept = 512, linetype="dotted", color = "blue", size=.3) +
  geom_vline(xintercept = 1619, linetype="dotted", color = "blue", size=.3) +

  geom_vline(xintercept = 478, linetype="dotted", color = "red", size=.3) +
  geom_vline(xintercept = 2900, linetype="dotted", color = "red", size=.3) +
  theme_classic() -> virtual_plot

# plotting all
df |>
  mutate(Config = case_when(NCPU == 8 ~ 'Xeon físico',
                            NCPU == 16 ~ 'Xeon virtual',
                            NCPU == 24 ~ 'I9 físico',
                            NCPU == 32 ~ 'I9 virtual')) |>
  ggplot(aes(x = NB, y = avg_t, color = Config)) +
  geom_point(size=2) +
  geom_line() +
  labs(x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  scale_x_continuous(breaks=c(128, 256, 512, 1024, 2048, 4096)) +
  geom_vline(xintercept = 256, linetype="dotted", color = "blue", size=.3) +
  geom_vline(xintercept = 512, linetype="dotted", color = "blue", size=.3) +
  geom_vline(xintercept = 1619, linetype="dotted", color = "blue", size=.3) +

  geom_vline(xintercept = 478, linetype="dotted", color = "red", size=.3) +
  geom_vline(xintercept = 2900, linetype="dotted", color = "red", size=.3) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 90)) -> full_plot
#+end_src

#+RESULTS:
[[file:plot.pdf]]

#+begin_src R :results output :session *R* :exports both
ggsave('apresentacao1/physical.png', physical_plot)
ggsave('apresentacao1/virtual.png', virtual_plot)
ggsave('apresentacao1/full.png', full_plot)
#+end_src

#+RESULTS:
: [1m[22mSaving 6.67 x 6.67 in image
: [1m[22mSaving 6.67 x 6.67 in image
: [1m[22mSaving 6.67 x 6.67 in image

* 04/08/2024
** Contando uma história:
**** Testes de desempenho só com as CPUs pra achar o melhor tamanho de bloco + melhor número de processos pra cada tupi
***** tupi1/tupi2
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="cpu_performance"
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}.slurm"
VERSION=2 # remember to increment if needed

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"                      >> ${SCRIPT_NAME}
echo "#SBATCH --time=05:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=${NODE}_${JOB_NAME}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=${NODE}_${JOB_NAME}.err" >> ${SCRIPT_NAME}

# code section
NGPU=0
SIZE=65536
OUTPUT_FILE="experiments/${NODE}_${JOB_NAME}_${VERSION}.csv"

echo "cd cmp270"    >> ${SCRIPT_NAME}
echo ". set_env.sh" >> ${SCRIPT_NAME}
echo "make"         >> ${SCRIPT_NAME}

echo "HOSTNAME=\$(hostname)" >> ${SCRIPT_NAME}

echo "echo 'NCPU,NGPU,N,NB,t' > ${OUTPUT_FILE}" >> ${SCRIPT_NAME}

for n in 8 16
do
    for i in 128 256 512 1024 2048 4096
    do
	for j in 1 2 3 4 5
	do
	    echo "echo 'Test ${j}/5 with block size ${i}' && \
	    	  ./main ${n} ${NGPU} ${SIZE} ${i} >> ${OUTPUT_FILE}" >> temp
	done
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

***** tupi3/tupi4
#+begin_src bash :results silent
NODE="tupi3"
JOB_NAME="cpu_performance"
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}.slurm"
VERSION=2 # remember to increment if needed

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"                      >> ${SCRIPT_NAME}
echo "#SBATCH --time=05:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=${NODE}_${JOB_NAME}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=${NODE}_${JOB_NAME}.err" >> ${SCRIPT_NAME}

# code section
NGPU=0
SIZE=65536
OUTPUT_FILE="experiments/${NODE}_${JOB_NAME}_${VERSION}.csv"

echo "cd cmp270"    >> ${SCRIPT_NAME}
echo ". set_env.sh" >> ${SCRIPT_NAME}
echo "make"         >> ${SCRIPT_NAME}

echo "HOSTNAME=\$(hostname)" >> ${SCRIPT_NAME}

echo "echo 'NCPU,NGPU,N,NB,t' > ${OUTPUT_FILE}" >> ${SCRIPT_NAME}

for n in 24 32
do
    for i in 128 256 512 1024 2048 4096
    do
	for j in 1 2 3 4 5
	do
	    echo "echo 'Test ${j}/5 with block size ${i}' && \
	    	  ./main ${n} ${NGPU} ${SIZE} ${i} >> ${OUTPUT_FILE}" >> temp
	done
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

***** Analisando
****** Transferindo resultados
#+begin_src bash :results silent
rsync --verbose --progress --recursive lbassis@gppd-hpc.inf.ufrgs.br:~/cmp270/experiments/tupi1_cpu_performance_1.csv experiments/
rsync --verbose --progress --recursive lbassis@gppd-hpc.inf.ufrgs.br:~/cmp270/experiments/tupi3_cpu_performance_1.csv experiments/
#+end_src

****** Plotando
#+begin_src R :results output graphics file :file plot.pdf :session *R* :exports both 
library(dplyr)
library(ggplot2)

tupi1 <- read.csv('experiments/tupi1_cpu_performance_1.csv')
tupi1$node = 'tupi1'

tupi3 <- read.csv('experiments/tupi3_cpu_performance_1.csv')
tupi3$node = 'tupi3'

df <- bind_rows(tupi1, tupi3)
df |> group_by(NCPU, NGPU, N, NB, node) |> summarise(avg_t = mean(t)) |> print(n=100) -> df


# plotting only physical
df |> 
  ggplot(aes(x = NB, y = avg_t, color = interaction(node, NCPU))) +
  geom_point() +
  geom_line() +
  labs(x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  scale_x_continuous(breaks=c(128, 256, 512, 1024, 2048, 4096)) +
  geom_vline(xintercept = 256, linetype="dotted", color = "blue", size=.3) +
  annotate("text", x = 160, y = 720, size=3, angle=90, label="L1 tupi1", color = "blue") +
  geom_vline(xintercept = 512, linetype="dotted", color = "blue", size=.3) +
  annotate("text", x = 590, y = 720, size=3, angle=90, label="L2 tupi1", color="blue") +
  geom_vline(xintercept = 1619, linetype="dotted", color = "blue", size=.3) +
  annotate("text", x = 1550, y = 720, size=3, angle=90, label="L3 tupi1", color="blue") +
  
  geom_vline(xintercept = 478, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 410, y = 720, size=3, angle=90, label="L1 tupi3", color="red") +
  geom_vline(xintercept = 2900, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 2830, y = 720, size=3, angle=90, label="L2 tupi3", color="red") +
  theme_classic() +
  expand_limits(x = 0, y = 0)
#+end_src

#+RESULTS:
[[file:plot.pdf]]

**** Opcional: comparar rastros do i9 pra ver os e-cores
**** Adicionando a GPU e fazendo um teste similar ao anterior fazendo duas execuções a mais pro StarPU se calibrar
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="gpu_performance"
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}.slurm"
VERSION=1 # remember to increment if needed

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"                      >> ${SCRIPT_NAME}
echo "#SBATCH --time=06:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=${NODE}_${JOB_NAME}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=${NODE}_${JOB_NAME}.err" >> ${SCRIPT_NAME}

# code section
NGPU=1
SIZE=65536
OUTPUT_FILE="experiments/${NODE}_${JOB_NAME}_${VERSION}.csv"

echo "cd cmp270"    >> ${SCRIPT_NAME}
echo ". set_env.sh" >> ${SCRIPT_NAME}
echo "make"         >> ${SCRIPT_NAME}

echo "HOSTNAME=\$(hostname)" >> ${SCRIPT_NAME}

echo "echo 'NCPU,NGPU,N,NB,t' > ${OUTPUT_FILE}" >> ${SCRIPT_NAME}

for n in 8 16
do
    for i in 128 256 512 1024 2048 4096
    do
	for j in 1 2 3 4 5 6 7
	do
	    echo "echo 'Test ${j}/7 with block size ${i}' && \
	    	  ./main ${n} ${NGPU} ${SIZE} ${i} >> ${OUTPUT_FILE}" >> temp
	done
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

#+begin_src bash :results silent
NODE="tupi3"
JOB_NAME="gpu_performance"
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}.slurm"
VERSION=1 # remember to increment if needed

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"                      >> ${SCRIPT_NAME}
echo "#SBATCH --time=06:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=${NODE}_${JOB_NAME}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=${NODE}_${JOB_NAME}.err" >> ${SCRIPT_NAME}

# code section
NGPU=1
SIZE=65536
OUTPUT_FILE="experiments/${NODE}_${JOB_NAME}_${VERSION}.csv"

echo "cd cmp270"    >> ${SCRIPT_NAME}
echo ". set_env.sh" >> ${SCRIPT_NAME}
echo "make"         >> ${SCRIPT_NAME}

echo "HOSTNAME=\$(hostname)" >> ${SCRIPT_NAME}

echo "echo 'NCPU,NGPU,N,NB,t' > ${OUTPUT_FILE}" >> ${SCRIPT_NAME}

for n in 24 32
do
    for i in 128 256 512 1024 2048 4096
    do
	for j in 1 2 3 4 5 6 7
	do
	    echo "echo 'Test ${j}/7 with block size ${i}' && \
	    	  ./main ${n} ${NGPU} ${SIZE} ${i} >> ${OUTPUT_FILE}" >> temp
	done
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

**** Ok, X ganhou. Mas e se otimizarmos o uso da GPU?
**** Ok, Y ganhou. Mas e se limitarmos pelo número de processos da CPU mais fraca? Ou pelo clock? Ou por ambos?
**** Comparação entre o rastro e o ABE dos melhores casos de cada tupi


tupi1 e tupi2 pciexpress3
tupi3 e tupi4 pciexpress4

* 06/08/2024 - Reunião de Lucas
** Reunião Nesi/Assis
*** Tamanho da matriz: 65k, 130k
*** Precisão: single-precision
*** Method to show and control CPU binding
#+begin_src shell :results output :exports both
export STARPU_DISPLAY_BINDINGS=1
export STARPU_WORKERS_CPUID="0 2 4 6 8 10 12 14"
#+end_src
*** Modelos de performance
#+begin_src shell :results output :exports both
$HOME/.starpu/sampling/codelets/45/
#+end_src
*** Qual é o escalonador?
*** Para saber a diferença entre p-core e e-core
1. Rodar cholesky com 1 core somente
   - 1 p-core OU
   - 1 e-core
2. Ver os modelos, ver os tempos médios das tarefas
3. Se estiver na ordem de 10% de diferença
   - Então não há necessidade de apagar os modelos
*** CPU-only (escalonador DMDA)
****** Tamanho da matriz -> 65k
****** Tamanho do bloco -> 256 512 1024 2048 4096
****** tupi1 + PCI3.0

tupi1.8 (cores)
tupi1.16 (cores + HT)

****** tupi3 + PCI4.0

tupi3.8 (p-cores)
tupi3.16 (p-cores + HT)
tupi3.24 (8x p-cores + 16x e-cores)
tupi3.32 (8x p-cores + HT + 16x e-cores)

*** CPU + GPU (escalonador DMDAS)
****** Tamanho da matriz -> 65k, 130k
****** Tamanho de bloco -> 2048 4096 8192
****** tupi1

tupi1.7 (cores) + 1 core normal para GPU
tupi1.8 (cores) -> 0 0 ...
tupi1.15 (cores + HT) + 1 core HT para GPU
tupi1.16 (cores + HT) -> 15 15 ...

****** tupi3

% tupi3.7 (p-cores) + 1 p-core para GPU
tupi3.8 (p-cores) -> 0 0 ...
tupi3.15 (p-cores + HT) + 1 core HT para GPU
tupi3.16 (cores + HT) -> 15 15 ...

tupi3.24 (8x p-cores + 16x e-cores)
- Thread GPU no p-core ou no e-core
- Dedicado ou não
tupi3.32 (8x p-cores + HT + 16x e-cores)
- Thread GPU no p-core ou no e-core
- Dedicado ou não

*** Tese de Luka Stanisic (modelagem de memória e banda PCI)
* 08/08/2024
** Testando modelo de performance
*** P-core
#+begin_src bash :results silent
lbassis@tupi4:~$ export STARPU_WORKERS_CPUID="0"
lbassis@tupi4:~$ export STARPU_SCHED=dmda
lbassis@tupi4:~$ export STARPU_DISPLAY_BINDINGS=1
lbassis@tupi4:~$ rm ~/.starpu/sampling/codelets/45/*
lbassis@tupi4:~$ chameleon_stesting -o potrf -t 1 -g 1 -n 65536
#+end_src

#+begin_src bash :results silent
lbassis@tupi4:~$ cat ~/.starpu/sampling/codelets/45/spotrf.tupi4
##################
# Performance Model Version
45

####################
# COMBs
# number of combinations
1
####################
# COMB_1
# number of types devices
1
####################
# DEV_0
# device type (CPU - 0, CUDA - 1, OpenCL - 2, FPGA - 4, MPI_MS - 5, TCPIP_MS - 6, HIP - 7)
0
####################
# DEV_0
# device id 
0
####################
# DEV_0
# number of cores 
1
##########
# number of implementations
1
#####
# Model for cpu0_cores1_impl0 (Comb1)
# number of entries
2
# sumlnx	sumlnx2		sumlny		sumlnxlny	alpha		beta		n	minx		maxx
0.000000e+00   	0.000000e+00   	0.000000e+00   	0.000000e+00   	nan            	nan            	0	0              	0              
# a		b		c
nan            	nan            	nan            
# not multiple-regression-base
0
# hash		size		flops		mean (us or J)	dev (us or J)	sum		sum2		n
54b49fcb	262144         	0.000000e+00   	9.802000e+01   	0.000000e+00   	9.802000e+01   	9.607920e+03   	1
cea37d6d	409600         	0.000000e+00   	1.458642e+02   	9.975426e+00   	5.907502e+04   	8.657234e+06   	405
#+end_src
*** E-core
#+begin_src bash :results silent
lbassis@tupi4:~$ export STARPU_WORKERS_CPUID="16"
lbassis@tupi4:~$ export STARPU_DISPLAY_BINDINGS=1
lbassis@tupi4:~$ export STARPU_SCHED=dmda
lbassis@tupi4:~$ rm ~/.starpu/sampling/codelets/45/*
lbassis@tupi4:~$ chameleon_stesting -o potrf -t 1 -g 1 -n 65536
[starpu][tupi4][_starpu_init_topology] Warning: there are several kinds of CPU on this system. For now StarPU assumes all CPU are equal
[starpu][tupi4][_starpu_initialize_workers_bindid] Warning: hwloc reported 32 logical CPUs for 24 cores, this is not homogeneous, will assume 1 logical CPUs per core
== Binding for rank 0 on node tupi4 ==
2428709	0xffffffff		/lib/systemd/systemd
2428710	0xffffffff		(sd-pam)
2428733	0xffffffff		sshd: lbassis@pts/0
2428734	0xffffffff		-bash
2429470	0xffffffff		chameleon_stesting
 2429470	0xffffffff		chameleon_stest
 2429471	0xffffffff		chameleon_stest
 2429472	0xffffffff		cuda0000380000f
 2429478	0x00010000		CUDA 0
 2429479	0x00010000		CPU 0
 2429480	0x00010000		cuda-EvtHandlr
 2429481	0x00010000		chameleon_stest
 2429482	0x00010000		MPI
2429483	0xffffffff		sh
2429484	0xffffffff		hwloc-ps
== End of bindings ==
Id;Function;threads;gpus;P;Q;mtxfmt;nb;uplo;n;lda;seedA;tsub;time;gflops
[starpu][tupi4][__starpu_history_based_job_expected_perf] Warning: model splgsy is not calibrated enough for cpu0_cores1_impl0 (Comb1) size 409600 footprint cea37d6d (only 0 measurements), forcing calibration for this run. Use the STARPU_CALIBRATE environment variable to control this. You probably need to run again to continue calibrating the model, until this warning disappears.
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model splgsy on cpu0_cores1_impl0 (Comb1): 422.300000us vs average 9414.548000us, 1 such errors against 1 samples (-95.514389%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][starpu_interface_end_driver_copy_async_devid] Warning: the submission of asynchronous transfer from NUMA 0 to CUDA 0 took a very long time (62.972441 ms)
For proper asynchronous transfer overlapping, data registered to StarPU must be allocated with starpu_malloc() or pinned with starpu_memory_pin()
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model strsm on cuda0_cores1_impl0 (Comb0): 67.504000us vs average 33.641000us, 1 such errors against 1 samples (+100.659909%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 20.746000us vs average 32.854000us, 1 such errors against 1 samples (-36.853960%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cpu0_cores1_impl0 (Comb1): 2302.405000us vs average 955.803000us, 1 such errors against 1 samples (+140.886982%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cpu0_cores1_impl0 (Comb1): 2581.498000us vs average 953.025000us, 1 such errors against 1 samples (+170.874111%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 64.346000us vs average 20.677000us, 3 such errors against 3 samples (+211.196015%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 30.498000us vs average 17.197500us, 2 such errors against 2 samples (+77.339730%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 135.010000us vs average 22.613000us, 1 such errors against 1 samples (+497.045947%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 19.327000us vs average 63.104000us, 1 such errors against 1 samples (-69.372781%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 15.505000us vs average 60.924000us, 1 such errors against 1 samples (-74.550259%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model ssyrk on cuda0_cores1_impl0 (Comb0): 59.076000us vs average 22.806000us, 2 such errors against 2 samples (+159.037096%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cuda0_cores1_impl0 (Comb0): 12.840000us vs average 19.588000us, 1 such errors against 1 samples (-34.449663%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cuda0_cores1_impl0 (Comb0): 12.445000us vs average 19.042000us, 1 such errors against 1 samples (-34.644470%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cuda0_cores1_impl0 (Comb0): 12.262000us vs average 18.572000us, 1 such errors against 1 samples (-33.975878%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cuda0_cores1_impl0 (Comb0): 9.373000us vs average 17.102693us, 46462 such errors against 46462 samples (-45.195765%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
[starpu][tupi4][_starpu_update_perfmodel_history] Too big deviation for model sgemm on cuda0_cores1_impl0 (Comb0): 20.688000us vs average 9.468000us, 1 such errors against 1 samples (+118.504436%), flushing the performance model. Use the STARPU_HISTORY_MAX_ERROR environment variable to control the threshold (currently 50%)
0;spotrf;1;1;1;1;0;320;121;65536;65536;846930886;0.000000e+00;3.996944e+01;2.347472e+03
#+end_src

#+begin_src bash :results silent
lbassis@tupi4:~$ cat ~/.starpu/sampling/codelets/45/spotrf.tupi4
##################
# Performance Model Version
45

####################
# COMBs
# number of combinations
1
####################
# COMB_1
# number of types devices
1
####################
# DEV_0
# device type (CPU - 0, CUDA - 1, OpenCL - 2, FPGA - 4, MPI_MS - 5, TCPIP_MS - 6, HIP - 7)
0
####################
# DEV_0
# device id 
0
####################
# DEV_0
# number of cores 
1
##########
# number of implementations
1
#####
# Model for cpu0_cores1_impl0 (Comb1)
# number of entries
2
# sumlnx	sumlnx2		sumlny		sumlnxlny	alpha		beta		n	minx		maxx
0.000000e+00   	0.000000e+00   	0.000000e+00   	0.000000e+00   	nan            	nan            	0	0              	0              
# a		b		c
nan            	nan            	nan            
# not multiple-regression-base
0
# hash		size		flops		mean (us or J)	dev (us or J)	sum		sum2		n
54b49fcb	262144         	0.000000e+00   	2.004190e+02   	0.000000e+00   	2.004190e+02   	4.016778e+04   	1
cea37d6d	409600         	0.000000e+00   	3.030861e+02   	6.903072e+00   	1.212344e+05   	3.676352e+07   	400
#+end_src

*** Comparando
P-core:
# hash		size		flops		mean (us or J)	dev (us or J)	sum		sum2		n
54b49fcb	262144         	0.000000e+00   	9.802000e+01   	0.000000e+00   	9.802000e+01   	9.607920e+03   	1
cea37d6d	409600         	0.000000e+00   	1.458642e+02   	9.975426e+00   	5.907502e+04   	8.657234e+06   	405

E-core:
# hash		size		flops		mean (us or J)	dev (us or J)	sum		sum2		n
54b49fcb	262144         	0.000000e+00   	2.004190e+02   	0.000000e+00   	2.004190e+02   	4.016778e+04   	1
cea37d6d	409600         	0.000000e+00   	3.030861e+02   	6.903072e+00   	1.212344e+05   	3.676352e+07   	400

** Testes CPU-only (DMDA)
*** tupi1
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="cpu_only_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-broadwell/gcc-11.3.0/chameleon-1.2.0-ieer6l5tfxxxrnnfbjdgqa2q5xfrxy32/bin"
VERSION=3 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=14:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}


echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmda" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# No HT

for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 8 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# With HT
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 16 -g 0 -n 65536 -b ${i}" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src
*** tupi3
#+begin_src bash :results silent
NODE="tupi4"
JOB_NAME="cpu_only_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"
VERSION=4 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=18:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmda" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# 8 P-cores

for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 8 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 16 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 24 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 32 -g 0 -n 65536 -b ${i}" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

** Testes GPU (DMDAS)
*** tupi1
tupi1.7 (cores) + 1 core normal para GPU
tupi1.8 (cores) -> 0 0 ...
tupi1.15 (cores + HT) + 1 core HT para GPU
tupi1.16 (cores + HT) -> 15 15 ...
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="gpu_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-broadwell/gcc-11.3.0/chameleon-1.2.0-ieer6l5tfxxxrnnfbjdgqa2q5xfrxy32/bin"
VERSION=2 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=12:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=${NODE}_${JOB_NAME}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=${NODE}_${JOB_NAME}.err" >> ${SCRIPT_NAME}


echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# 7 workers without HT + 1 GPU core

for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 65536 -b ${i} && echo \";7+1\"" >> temp
    done
done

# 8 workers without GPU-only core
for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 65536 -b ${i} && echo \";8\"" >> temp
    done
done

# 15 workers+ 1 HT GPU core

for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 65536 -b ${i} && echo \";15+1\"" >> temp
    done
done

# 16 workers without GPU-only core
for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 65536 -b ${i} && echo \";16\"" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

* 12/08/2024
** Parsing do slurm
*** tupi1 CPU
#+begin_src bash :results silent
EXP='tupi1_cpu_only_performance_3'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi1_cpu_only_performance_3'

tupi1 <- read.csv(paste0('experiments/', title, '.csv'))
tupi1$node = 'tupi1'

tupi1 |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 8 ~ "8 Cores",
           threads == 16 ~ "8 Cores + HT")) -> tupi1
tupi1$config = as.factor(tupi1$config)


# dropping worst performance
tupi1 |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) |>
  print(n=100) -> tupi1_sliced

tupi1_sliced |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  geom_vline(xintercept = 1619, linetype="dotted", color = "blue", size=.3) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot

ggsave(paste0("experiments/", title, ".pdf"), plot)
#+end_src
*** tupi4 CPU
#+begin_src bash :results silent
EXP='tupi4_cpu_only_performance_4'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi4_cpu_only_performance_4'
tupi3 <- read.csv(paste0('experiments/', title, '.csv'))
tupi3$node = 'tupi3'

tupi3 |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 8 ~ "8 P-Cores",
           threads == 16 ~ "8 P-Cores + HT",
           threads == 24 ~ "8 P-Cores + 16 E-Cores",
           threads == 32 ~ "8 P-Cores + HT + 16 E-Cores")) -> tupi3
tupi3$config = as.factor(tupi3$config)


# dropping worst performance
tupi3 |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) |>
  print(n=100) -> tupi3_sliced

tupi3_sliced |> filter(threads == 8 | threads == 16) |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_pcore

tupi3_sliced |> filter(threads == 24 | threads == 32) |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_ecore

tupi3_sliced |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_all

ggsave(paste0("experiments/", title, "_pcore.pdf"), plot_pcore)
ggsave(paste0("experiments/", title, "_ecore.pdf"), plot_ecore)
ggsave(paste0("experiments/", title, ".pdf"), plot_all)

#+end_src

#+RESULTS:
#+begin_example
iv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  158.  [4m1[24m191. tupi3
[90m 19[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  158.  [4m1[24m191. tupi3
[90m 20[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  158.  [4m1[24m186. tupi3
[90m 21[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m226. tupi3
[90m 22[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m225. tupi3
[90m 23[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m224. tupi3
[90m 24[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m223. tupi3
[90m 25[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m222. tupi3
[90m 26[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m266. tupi3
[90m 27[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m261. tupi3
[90m 28[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m256. tupi3
[90m 29[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m254. tupi3
[90m 30[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m252. tupi3
[90m 31[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  125.  [4m1[24m503. tupi3
[90m 32[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  125.  [4m1[24m502. tupi3
[90m 33[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m492. tupi3
[90m 34[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m487. tupi3
[90m 35[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m487. tupi3
[90m 36[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m276. tupi3
[90m 37[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m274. tupi3
[90m 38[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m274. tupi3
[90m 39[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m274. tupi3
[90m 40[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m272. tupi3
[90m 41[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m237. tupi3
[90m 42[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m236. tupi3
[90m 43[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m236. tupi3
[90m 44[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m236. tupi3
[90m 45[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m233. tupi3
[90m 46[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m266. tupi3
[90m 47[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m266. tupi3
[90m 48[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m264. tupi3
[90m 49[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m258. tupi3
[90m 50[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m255. tupi3
[90m 51[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m492. tupi3
[90m 52[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  127.  [4m1[24m477. tupi3
[90m 53[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  128.  [4m1[24m469. tupi3
[90m 54[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  129.  [4m1[24m454. tupi3
[90m 55[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  129.  [4m1[24m450. tupi3
[90m 56[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m267. tupi3
[90m 57[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m267. tupi3
[90m 58[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m266. tupi3
[90m 59[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m265. tupi3
[90m 60[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m262. tupi3
[90m 61[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m271. tupi3
[90m 62[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m271. tupi3
[90m 63[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m270. tupi3
[90m 64[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m269. tupi3
[90m 65[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m266. tupi3
[90m 66[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  144.  [4m1[24m303. tupi3
[90m 67[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  146.  [4m1[24m287. tupi3
[90m 68[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  146.  [4m1[24m281. tupi3
[90m 69[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m275. tupi3
[90m 70[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m267. tupi3
[90m 71[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  123.  [4m1[24m530. tupi3
[90m 72[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  125.  [4m1[24m506. tupi3
[90m 73[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  125.  [4m1[24m500. tupi3
[90m 74[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  128.  [4m1[24m469. tupi3
[90m 75[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  128.  [4m1[24m461. tupi3
[90m 76[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  145.  [4m1[24m293. tupi3
[90m 77[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  145.  [4m1[24m293. tupi3
[90m 78[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  145.  [4m1[24m291. tupi3
[90m 79[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  145.  [4m1[24m291. tupi3
[90m 80[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  145.  [4m1[24m291. tupi3
[90m 81[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m271. tupi3
[90m 82[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m270. tupi3
[90m 83[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m267. tupi3
[90m 84[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m262. tupi3
[90m 85[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m261. tupi3
[90m 86[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  159.  [4m1[24m181. tupi3
[90m 87[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  159.  [4m1[24m181. tupi3
[90m 88[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  160.  [4m1[24m173. tupi3
[90m 89[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  161.  [4m1[24m168. tupi3
[90m 90[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  161.  [4m1[24m165. tupi3
[90m 91[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  133.  [4m1[24m411. tupi3
[90m 92[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  139.  [4m1[24m354. tupi3
[90m 93[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  139.  [4m1[24m354. tupi3
[90m 94[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  144.  [4m1[24m304. tupi3
[90m 95[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  158.  [4m1[24m188. tupi3
[90m 96[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m256. tupi3
[90m 97[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m251. tupi3
[90m 98[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m250. tupi3
[90m 99[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m249. tupi3
[90m100[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  151.  [4m1[24m243. tupi3
[90m# ℹ 1 more variable: config <fct>[39m
[1m[22mSaving 7 x 7 in image
[90m# A tibble: 100 × 18[39m
[90m# Groups:   nb, threads [20][39m
       Id Function     threads  gpus     P     Q mtxfmt    nb     m     n   lda   seedA  bump  tsub  time gflops node 
    [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m          [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m
[90m  1[39m     0 sgetrf_nopiv       8     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  170.  [4m1[24m105. tupi3
[90m  2[39m     0 sgetrf_nopiv       8     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  170.  [4m1[24m103. tupi3
[90m  3[39m     0 sgetrf_nopiv       8     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  170.  [4m1[24m103. tupi3
[90m  4[39m     0 sgetrf_nopiv       8     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  170.  [4m1[24m102. tupi3
[90m  5[39m     0 sgetrf_nopiv       8     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  170.  [4m1[24m102. tupi3
[90m  6[39m     0 sgetrf_nopiv      16     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m211. tupi3
[90m  7[39m     0 sgetrf_nopiv      16     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  159.  [4m1[24m179. tupi3
[90m  8[39m     0 sgetrf_nopiv      16     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  160.  [4m1[24m176. tupi3
[90m  9[39m     0 sgetrf_nopiv      16     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  160.  [4m1[24m174. tupi3
[90m 10[39m     0 sgetrf_nopiv      16     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  161.  [4m1[24m167. tupi3
[90m 11[39m     0 sgetrf_nopiv      24     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  139.  [4m1[24m347. tupi3
[90m 12[39m     0 sgetrf_nopiv      24     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  140.  [4m1[24m344. tupi3
[90m 13[39m     0 sgetrf_nopiv      24     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  140.  [4m1[24m342. tupi3
[90m 14[39m     0 sgetrf_nopiv      24     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  141.  [4m1[24m335. tupi3
[90m 15[39m     0 sgetrf_nopiv      24     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  143.  [4m1[24m314. tupi3
[90m 16[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  159.  [4m1[24m177. tupi3
[90m 17[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  159.  [4m1[24m177. tupi3
[90m 18[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  160.  [4m1[24m176. tupi3
[90m 19[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  160.  [4m1[24m172. tupi3
[90m 20[39m     0 sgetrf_nopiv      32     0     1     1      0   256 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  160.  [4m1[24m171. tupi3
[90m 21[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m213. tupi3
[90m 22[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m212. tupi3
[90m 23[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m211. tupi3
[90m 24[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m210. tupi3
[90m 25[39m     0 sgetrf_nopiv       8     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  156.  [4m1[24m206. tupi3
[90m 26[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m258. tupi3
[90m 27[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m257. tupi3
[90m 28[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m254. tupi3
[90m 29[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m254. tupi3
[90m 30[39m     0 sgetrf_nopiv      16     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m252. tupi3
[90m 31[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  125.  [4m1[24m499. tupi3
[90m 32[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m488. tupi3
[90m 33[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  127.  [4m1[24m481. tupi3
[90m 34[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  127.  [4m1[24m477. tupi3
[90m 35[39m     0 sgetrf_nopiv      24     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  129.  [4m1[24m458. tupi3
[90m 36[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m276. tupi3
[90m 37[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m261. tupi3
[90m 38[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m257. tupi3
[90m 39[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m257. tupi3
[90m 40[39m     0 sgetrf_nopiv      32     0     1     1      0   512 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m250. tupi3
[90m 41[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m225. tupi3
[90m 42[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m223. tupi3
[90m 43[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m223. tupi3
[90m 44[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m219. tupi3
[90m 45[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m218. tupi3
[90m 46[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m255. tupi3
[90m 47[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m249. tupi3
[90m 48[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m249. tupi3
[90m 49[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  151.  [4m1[24m241. tupi3
[90m 50[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m238. tupi3
[90m 51[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  127.  [4m1[24m477. tupi3
[90m 52[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  127.  [4m1[24m472. tupi3
[90m 53[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  128.  [4m1[24m471. tupi3
[90m 54[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  128.  [4m1[24m470. tupi3
[90m 55[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  130.  [4m1[24m448. tupi3
[90m 56[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m254. tupi3
[90m 57[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m253. tupi3
[90m 58[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m252. tupi3
[90m 59[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m251. tupi3
[90m 60[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m1[24m024 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m250. tupi3
[90m 61[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m256. tupi3
[90m 62[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m255. tupi3
[90m 63[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m255. tupi3
[90m 64[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m255. tupi3
[90m 65[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  150.  [4m1[24m254. tupi3
[90m 66[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m280. tupi3
[90m 67[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m277. tupi3
[90m 68[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m276. tupi3
[90m 69[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m275. tupi3
[90m 70[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m270. tupi3
[90m 71[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m495. tupi3
[90m 72[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  126.  [4m1[24m485. tupi3
[90m 73[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  127.  [4m1[24m474. tupi3
[90m 74[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  132.  [4m1[24m418. tupi3
[90m 75[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  132.  [4m1[24m418. tupi3
[90m 76[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m278. tupi3
[90m 77[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m276. tupi3
[90m 78[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  147.  [4m1[24m273. tupi3
[90m 79[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m272. tupi3
[90m 80[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  148.  [4m1[24m269. tupi3
[90m 81[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m257. tupi3
[90m 82[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  149.  [4m1[24m256. tupi3
[90m 83[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  151.  [4m1[24m247. tupi3
[90m 84[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  151.  [4m1[24m243. tupi3
[90m 85[39m     0 sgetrf_nopiv       8     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  151.  [4m1[24m241. tupi3
[90m 86[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m226. tupi3
[90m 87[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m225. tupi3
[90m 88[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m219. tupi3
[90m 89[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m216. tupi3
[90m 90[39m     0 sgetrf_nopiv      16     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m209. tupi3
[90m 91[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  138.  [4m1[24m358. tupi3
[90m 92[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  141.  [4m1[24m332. tupi3
[90m 93[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  141.  [4m1[24m327. tupi3
[90m 94[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  144.  [4m1[24m302. tupi3
[90m 95[39m     0 sgetrf_nopiv      24     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  145.  [4m1[24m295. tupi3
[90m 96[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  152.  [4m1[24m233. tupi3
[90m 97[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  153.  [4m1[24m224. tupi3
[90m 98[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m222. tupi3
[90m 99[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  154.  [4m1[24m220. tupi3
[90m100[39m     0 sgetrf_nopiv      32     0     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  155.  [4m1[24m214. tupi3
[90m# ℹ 1 more variable: config <fct>[39m
[1m[22mSaving 7 x 7 in image
[1m[22mSaving 7 x 7 in image
[1m[22mSaving 7 x 7 in image
#+end_example

*** CPU geral
#+begin_src R :results output :session *R* :exports both
df <- bind_rows(tupi1_sliced, tupi3_sliced) 
df |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = 'tupi1_cpu + tupi3_cpu', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_all

ggsave("experiments/plot_cpu_only.pdf", plot_all)

#+end_src

#+RESULTS:
: [1m[22mSaving 7 x 7 in image

*** tupi1 GPU
#+begin_src bash :results silent
EXP='tupi1_gpu_performance'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops,cfg" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou | paste -d '' - - >> experiments/${EXP}.csv
#+end_src

#+begin_src R :results output :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi1_gpu_performance'
tupi1_gpu <- read.csv(paste0('experiments/', title, '.csv'))
tupi1_gpu$node = 'tupi1'

tupi1_gpu |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 7 ~ "7 Cores + 1 CUDA",
           threads == 8 ~ "8 Cores + 0 CUDA",
           threads == 15 ~ "8 Cores + (HT -1 ) + 1 HT CUDA",
           threads == 16 ~ "8 Cores + HT + 0 CUDA")) -> tupi1_gpu
tupi1_gpu$config = as.factor(tupi1_gpu$config)

# dropping worst performance
tupi1_gpu |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) |>
  print(n=100) -> tupi1_gpu_sliced

tupi1_gpu_sliced |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot

ggsave("experiments/tupi1_gpu.pdf", plot)
#+end_src

#+RESULTS:
#+begin_example
[90m# A tibble: 94 × 19[39m
[90m# Groups:   nb, threads [16][39m
      Id Function     threads  gpus     P     Q mtxfmt    nb     m     n   lda   seedA  bump  tsub   time gflops cfg  
   [3m[90m<int>[39m[23m [3m[90m<chr>[39m[23m          [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m  [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m [3m[90m<int>[39m[23m   [3m[90m<int>[39m[23m [3m[90m<dbl>[39m[23m [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m  [3m[90m<dbl>[39m[23m [3m[90m<chr>[39m[23m
[90m 1[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   5.78 [4m3[24m[4m2[24m438. 7+1  
[90m 2[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   5.79 [4m3[24m[4m2[24m397. 7+1  
[90m 3[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   5.80 [4m3[24m[4m2[24m370. 7+1  
[90m 4[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   5.80 [4m3[24m[4m2[24m365. 7+1  
[90m 5[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   5.80 [4m3[24m[4m2[24m363. 7+1  
[90m 6[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   5.80 [4m3[24m[4m2[24m351. 7+1  
[90m 7[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  10.9  [4m1[24m[4m7[24m283. 8    
[90m 8[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  10.9  [4m1[24m[4m7[24m280. 8    
[90m 9[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  11.0  [4m1[24m[4m7[24m083. 8    
[90m10[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  11.0  [4m1[24m[4m7[24m059. 8    
[90m11[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  11.0  [4m1[24m[4m7[24m052. 8    
[90m12[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  11.0  [4m1[24m[4m7[24m037. 8    
[90m13[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   8.03 [4m2[24m[4m3[24m381. 15+1 
[90m14[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   8.04 [4m2[24m[4m3[24m339. 15+1 
[90m15[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   8.04 [4m2[24m[4m3[24m338. 15+1 
[90m16[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   8.04 [4m2[24m[4m3[24m332. 15+1 
[90m17[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   8.05 [4m2[24m[4m3[24m319. 15+1 
[90m18[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0   8.05 [4m2[24m[4m3[24m316  15+1 
[90m19[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  13.6  [4m1[24m[4m3[24m772. 16   
[90m20[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  13.7  [4m1[24m[4m3[24m692. 16   
[90m21[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  13.9  [4m1[24m[4m3[24m533. 16   
[90m22[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  13.9  [4m1[24m[4m3[24m521. 16   
[90m23[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  13.9  [4m1[24m[4m3[24m490. 16   
[90m24[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m2[24m048 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  13.9  [4m1[24m[4m3[24m489. 16   
[90m25[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  15.6  [4m1[24m[4m2[24m035. 7+1  
[90m26[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  15.6  [4m1[24m[4m2[24m017. 7+1  
[90m27[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  15.7  [4m1[24m[4m1[24m976. 7+1  
[90m28[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  15.7  [4m1[24m[4m1[24m967. 7+1  
[90m29[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  15.7  [4m1[24m[4m1[24m965. 7+1  
[90m30[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  15.7  [4m1[24m[4m1[24m959. 7+1  
[90m31[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  30.8   [4m6[24m084. 8    
[90m32[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  30.9   [4m6[24m074. 8    
[90m33[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  30.9   [4m6[24m072. 8    
[90m34[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  31.0   [4m6[24m060. 8    
[90m35[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  31.0   [4m6[24m050. 8    
[90m36[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  31.0   [4m6[24m047. 8    
[90m37[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  26.5   [4m7[24m071. 15+1 
[90m38[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  26.6   [4m7[24m056. 15+1 
[90m39[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  26.7   [4m7[24m036. 15+1 
[90m40[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  26.7   [4m7[24m035. 15+1 
[90m41[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  26.7   [4m7[24m032. 15+1 
[90m42[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  26.7   [4m7[24m031. 15+1 
[90m43[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  51.0   [4m3[24m676. 16   
[90m44[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  51.1   [4m3[24m673. 16   
[90m45[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  51.1   [4m3[24m673. 16   
[90m46[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  51.1   [4m3[24m670. 16   
[90m47[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  51.3   [4m3[24m660. 16   
[90m48[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m4[24m096 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  52.6   [4m3[24m570. 16   
[90m49[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  60.8   [4m3[24m088. 7+1  
[90m50[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  60.9   [4m3[24m083. 7+1  
[90m51[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  60.9   [4m3[24m083. 7+1  
[90m52[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  60.9   [4m3[24m080. 7+1  
[90m53[39m     0 sgetrf_nopiv       7     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  60.9   [4m3[24m080. 7+1  
[90m54[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  83.1   [4m2[24m259. 8    
[90m55[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  83.1   [4m2[24m259. 8    
[90m56[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  83.3   [4m2[24m252. 8    
[90m57[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  83.3   [4m2[24m252. 8    
[90m58[39m     0 sgetrf_nopiv       8     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0  83.5   [4m2[24m248. 8    
[90m59[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 107.    [4m1[24m762. 15+1 
[90m60[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 107.    [4m1[24m761. 15+1 
[90m61[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 107.    [4m1[24m761. 15+1 
[90m62[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 107.    [4m1[24m761. 15+1 
[90m63[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 107.    [4m1[24m760. 15+1 
[90m64[39m     0 sgetrf_nopiv      15     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 107.    [4m1[24m760. 15+1 
[90m65[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 184.    [4m1[24m019. 16   
[90m66[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 197.     953. 16   
[90m67[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 197.     951. 16   
[90m68[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 197.     950. 16   
[90m69[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 197.     950. 16   
[90m70[39m     0 sgetrf_nopiv      16     1     1     1      0  [4m8[24m192 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 198.     949. 16   
[90m71[39m     0 sgetrf_nopiv       7     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 257.     729. 7+1  
[90m72[39m     0 sgetrf_nopiv       7     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 257.     729. 7+1  
[90m73[39m     0 sgetrf_nopiv       7     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 258.     728. 7+1  
[90m74[39m     0 sgetrf_nopiv       7     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 258.     728. 7+1  
[90m75[39m     0 sgetrf_nopiv       7     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 258.     728. 7+1  
[90m76[39m     0 sgetrf_nopiv       7     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 258.     728. 7+1  
[90m77[39m     0 sgetrf_nopiv       8     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 385.     488. 8    
[90m78[39m     0 sgetrf_nopiv       8     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 385.     487. 8    
[90m79[39m     0 sgetrf_nopiv       8     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 385.     487. 8    
[90m80[39m     0 sgetrf_nopiv       8     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 385.     487. 8    
[90m81[39m     0 sgetrf_nopiv       8     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 386.     487. 8    
[90m82[39m     0 sgetrf_nopiv       8     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 386.     486. 8    
[90m83[39m     0 sgetrf_nopiv      15     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 434.     432. 15+1 
[90m84[39m     0 sgetrf_nopiv      15     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 434.     432. 15+1 
[90m85[39m     0 sgetrf_nopiv      15     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 436.     431. 15+1 
[90m86[39m     0 sgetrf_nopiv      15     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 436.     431. 15+1 
[90m87[39m     0 sgetrf_nopiv      15     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 436.     430. 15+1 
[90m88[39m     0 sgetrf_nopiv      15     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 436.     430. 15+1 
[90m89[39m     0 sgetrf_nopiv      16     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 758.     247. 16   
[90m90[39m     0 sgetrf_nopiv      16     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 758.     247. 16   
[90m91[39m     0 sgetrf_nopiv      16     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 759.     247. 16   
[90m92[39m     0 sgetrf_nopiv      16     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 760.     247. 16   
[90m93[39m     0 sgetrf_nopiv      16     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 762.     246. 16   
[90m94[39m     0 sgetrf_nopiv      16     1     1     1      0 [4m1[24m[4m6[24m384 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536 [4m6[24m[4m5[24m536  8.47[90me[39m8     0     0 864.     217. 16   
[90m# ℹ 2 more variables: node <chr>, config <fct>[39m
[1m[22mSaving 7 x 7 in image
#+end_example


* 13/08/2024
** GPU tupi3/4
#+begin_src bash
NODE="tupi4"
JOB_NAME="gpu_performance"
VERSION=3 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:30:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi4" >> ${SCRIPT_NAME}

# 8 P-cores + 0 CUDA P-core

for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 65536 -b ${i} && echo \"8+0P\"" >> temp
    done
done

# 8 P-cores with HT + 0 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 65536 -b ${i} && echo \"8+HT+0P\"" >> temp
    done
done

# 8 P-cores + 16 E-cores + 0 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 24 -g 1 -n 65536 -b ${i} && echo \"8+16+0P\"" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores + 0 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 32 -g 1 -n 65536 -b ${i} && echo \"8+HT+16+0P\"" >> temp
    done
done


# 7 P-cores + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 65536 -b ${i} && echo \"7+1P\"" >> temp
    done
done

# 7 P-cores with HT + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 65536 -b ${i} && echo \"7+HT+1P\"" >> temp
    done
done

# 7 P-cores + 16 E-cores + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 23 -g 1 -n 65536 -b ${i} && echo \"7+16+1P\"" >> temp
    done
done

# 7 P-cores with HT + 16 E-cores + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 31 -g 1 -n 65536 -b ${i} && echo \"7+HT+16+1P\"" >> temp
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

#+RESULTS:
| sending                       | incremental | file  | list     |         |       |           |           |           |         |         |             |
| tupi4_gpu_performance_3.slurm |             |       |          |         |       |           |           |           |         |         |             |
|                             | 32,768      | 43%   | 0.00kB/s | 0:00:00 |     | 75,936    |      100% | 41.17MB/s | 0:00:00 | (xfr#1, | to-chk=0/1) |
|                               |             |       |          |         |       |           |           |           |         |         |             |
| sent                          | 76,062      | bytes | received |     689 | bytes | 51,167.33 | bytes/sec |           |         |         |             |
| total                         | size        | is    | 75,936   | speedup | is    | 0.99      |           |           |         |         |             |

** Homogeneous core
*** CPU only
#+begin_src bash :results silent
NODE="tupi4"
JOB_NAME="cpu_only_homogeneous_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"
VERSION=1 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=20:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmda" >> ${SCRIPT_NAME}
echo "export STARPU_PERF_MODEL_HOMOGENEOUS_CPU=0" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# 8 P-cores

for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 8 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 16 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 24 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 32 -g 0 -n 65536 -b ${i}" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

*** GPU
** GPU melhor utilizada
*** tupi1
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="gpu_loaded_performance"
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}.slurm"
TESTING_DIR="~/spack/opt/spack/linux-debian12-broadwell/gcc-11.3.0/chameleon-1.2.0-ieer6l5tfxxxrnnfbjdgqa2q5xfrxy32/bin"
VERSION=1 # remember to increment if needed

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=15:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=${NODE}_${JOB_NAME}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=${NODE}_${JOB_NAME}.err" >> ${SCRIPT_NAME}


echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# 7 workers without HT + 1 GPU core

for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 120000 -b ${i} && echo \";7+1\"" >> temp
    done
done

# 8 workers without GPU-only core
for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 120000 -b ${i} && echo \";8\"" >> temp
    done
done

# 15 workers+ 1 HT GPU core

for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 120000 -b ${i} && echo \";15+1\"" >> temp
    done
done

# 16 workers without GPU-only core
for i in 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6 7
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 120000 -b ${i} && echo \";16\"" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src


* Scripts
** CPU Xeon
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="cpu_only_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-broadwell/gcc-11.3.0/chameleon-1.2.0-ieer6l5tfxxxrnnfbjdgqa2q5xfrxy32/bin"
VERSION=3 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=14:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}


echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmda" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# No HT

for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 8 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# With HT
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 16 -g 0 -n 65536 -b ${i}" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src
** CPU i9
#+begin_src bash :results silent
NODE="tupi4"
JOB_NAME="cpu_only_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"
VERSION=4 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=18:00:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmda" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*" >> ${SCRIPT_NAME}

# 8 P-cores

for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 8 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 16 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 24 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 32 -g 0 -n 65536 -b ${i}" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src


** CPU i9 non-homogeneous
#+begin_src bash :results silent
NODE="tupi3"
JOB_NAME="cpu_only_non_homogeneous_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"
VERSION=1 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:55:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmda" >> ${SCRIPT_NAME}
echo "export STARPU_PERF_MODEL_HOMOGENEOUS_CPU=0" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi3" >> ${SCRIPT_NAME}

# 8 P-cores

for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 8 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 16 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 24 -g 0 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores
for i in 256 512 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o getrf_nopiv -t 32 -g 0 -n 65536 -b ${i}" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src


** GPU Xeon
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="gpu_performance"
TESTING_DIR="~/spack/opt/spack/linux-debian12-broadwell/gcc-11.3.0/chameleon-1.2.0-ieer6l5tfxxxrnnfbjdgqa2q5xfrxy32/bin"
VERSION=3 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:55:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}


echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi1" >> ${SCRIPT_NAME}

# 7 cores + 1 GPU core

for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 65536 -b ${i} && echo \";7+1\"" >> temp
    done
done

# 8 cores without GPU-only core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 65536 -b ${i} && echo \";8\"" >> temp
    done
done

# 7 cores + HT + 1 GPU core

for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 0\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 65536 -b ${i} && echo \";15+1\"" >> temp
    done
done

# 8 cores + HT without GPU-only core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 65536 -b ${i} && echo \";16\"" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src
** GPU i9
#+begin_src bash
NODE="tupi4"
JOB_NAME="gpu_performance"
VERSION=4 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:30:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi4" >> ${SCRIPT_NAME}

# 8 P-cores + 0 CUDA P-core

for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 65536 -b ${i} && echo \"8+0P\"" >> temp
    done
done

# 8 P-cores with HT + 0 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 65536 -b ${i} && echo \"8+HT+0P\"" >> temp
    done
done

# 8 P-cores + 16 E-cores + 0 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 24 -g 1 -n 65536 -b ${i} && echo \"8+16+0P\"" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores + 0 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 32 -g 1 -n 65536 -b ${i} && echo \"8+HT+16+0P\"" >> temp
    done
done


# 7 P-cores + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 65536 -b ${i} && echo \"7+1P\"" >> temp
    done
done

# 7 P-cores with HT + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 65536 -b ${i} && echo \"7+HT+1P\"" >> temp
    done
done

# 7 P-cores + 16 E-cores + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 23 -g 1 -n 65536 -b ${i} && echo \"7+16+1P\"" >> temp
    done
done

# 7 P-cores with HT + 16 E-cores + 1 CUDA P-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 31 -g 1 -n 65536 -b ${i} && echo \"7+HT+16+1P\"" >> temp
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

#+RESULTS:
| sending                       | incremental | file  | list     |         |       |            |           |           |         |         |             |
| tupi4_gpu_performance_4.slurm |             |       |          |         |       |            |           |           |         |         |             |
|                             | 32,768      | 43%   | 0.00kB/s | 0:00:00 |     | 75,864     |      100% | 41.10MB/s | 0:00:00 | (xfr#1, | to-chk=0/1) |
|                               |             |       |          |         |       |            |           |           |         |         |             |
| sent                          | 75,989      | bytes | received |      35 | bytes | 152,048.00 | bytes/sec |           |         |         |             |
| total                         | size        | is    | 75,864   | speedup | is    | 1.0        |           |           |         |         |             |


** GPU Xeon 100k
#+begin_src bash :results silent
NODE="tupi1"
JOB_NAME="gpu_performance_100k"
TESTING_DIR="~/spack/opt/spack/linux-debian12-broadwell/gcc-11.3.0/chameleon-1.2.0-ieer6l5tfxxxrnnfbjdgqa2q5xfrxy32/bin"
VERSION=1 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:55:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}


echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi1" >> ${SCRIPT_NAME}

# 7 cores + 1 GPU core

for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 100000 -b ${i} && echo \";7+1\"" >> temp
    done
done

# 8 cores without GPU-only core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 100000 -b ${i} && echo \";8\"" >> temp
    done
done

# 7 cores + HT + GPU core

for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"15 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 100000 -b ${i} && echo \";15+1\"" >> temp
    done
done

# 8 cores + HT without GPU-only core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 100000 -b ${i} && echo \";16\"" >> temp
    done
done


cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

** GPU i9 100k
#+begin_src bash :results silent
NODE="tupi3"
JOB_NAME="gpu_performance_100k"
VERSION=3 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:55:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi3" >> ${SCRIPT_NAME}

# 8 P-cores + 0 CUDA P-core

for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 100000 -b ${i} && echo \"8+0P\"" >> temp
    done
done

# 8 P-cores with HT + 0 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 100000 -b ${i} && echo \"8+HT+0P\"" >> temp
    done
done

# 8 P-cores + 16 E-cores + 0 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 2 4 6 8 10 12 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 24 -g 1 -n 100000 -b ${i} && echo \"8+16+0P\"" >> temp
    done
done

# 8 P-cores with HT + 16 E-cores + 0 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 32 -g 1 -n 100000 -b ${i} && echo \"8+HT+16+0P\"" >> temp
    done
done


# 7 P-cores + 1 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 7 -g 1 -n 100000 -b ${i} && echo \"7+1P\"" >> temp
    done
done

# 7 P-cores with HT + 1 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 15 -g 1 -n 100000 -b ${i} && echo \"7+HT+1P\"" >> temp
    done
done

# 7 P-cores + 16 E-cores + 1 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 4 6 8 10 12 14 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 23 -g 1 -n 100000 -b ${i} && echo \"7+16+1P\"" >> temp
    done
done

# 7 P-cores with HT + 16 E-cores + 1 CUDA P-core
for i in 1024 2048 4096
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 31 -g 1 -n 100000 -b ${i} && echo \"7+HT+16+1P\"" >> temp
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

* Análises tudo junto

** CPU Xeon
#+begin_src bash :results silent
EXP='tupi1_cpu_only_performance_4'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi1_cpu_only_performance_4'

tupi1 <- read.csv(paste0('experiments/', title, '.csv'))
tupi1$node = 'tupi1'

tupi1 |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 8 ~ "8 Cores",
           threads == 16 ~ "8 Cores + HT")) -> tupi1
tupi1$config = as.factor(tupi1$config)


# excluindo pior desempenho
tupi1 |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi1_sliced

tupi1_sliced |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100), size=1.5) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot

ggsave(paste0("experiments/", title, ".png"), plot)
#+end_src
** CPU i9
#+begin_src bash :results silent
EXP='tupi4_cpu_only_performance_4'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi4_cpu_only_performance_4'
tupi4 <- read.csv(paste0('experiments/', title, '.csv'))
tupi4$node = 'tupi4'

tupi4 |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 8 ~ "8 P-Cores",
           threads == 16 ~ "8 P-Cores + HT",
           threads == 24 ~ "8 P-Cores + 16 E-Cores",
           threads == 32 ~ "8 P-Cores + HT + 16 E-Cores")) -> tupi4
tupi4$config = as.factor(tupi4$config)


# excluindo o pior desempenho
tupi4 |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi4_sliced

tupi4_sliced |> filter(threads == 8 | threads == 16) |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_pcore

tupi4_sliced |> filter(threads == 24 | threads == 32) |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_ecore

tupi4_sliced |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_all

ggsave(paste0("experiments/", title, "_pcore.png"), plot_pcore)
ggsave(paste0("experiments/", title, "_ecore.png"), plot_ecore)
ggsave(paste0("experiments/", title, ".png"), plot_all)

#+end_src
** CPU geral
#+begin_src R :results silent :session *R* :exports both
df <- bind_rows(tupi1_sliced, tupi4_sliced)

min_t_row = df[which.min(df$time),]
min_t = min_t_row$time

threshold_t = 2.8*min_t

df |>
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw(base_size=16) +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 2000, y = threshold_t+7, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_cpu + tupi4_cpu', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_all

ggsave("experiments/plot_cpu_only.pdf", plot_all)

min_t_row_xeon = tupi1_sliced[which.min(tupi1_sliced$time)]
min_t_xeon = min_t_row_xeon$time
min_t_row_i9 = tupi4_sliced[which.min(tupi4_sliced$time)]
min_t_i9 = min_t_row_i9$time

min_t_xeon
min_t_i9
#+end_src
** GPU Xeon
#+begin_src bash :results silent
EXP='tupi1_gpu_performance_3'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops,cfg" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou | paste -d '' - - >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi1_gpu_performance_3'
tupi1_gpu <- read.csv(paste0('experiments/', title, '.csv'))
tupi1_gpu$node = 'tupi1'

tupi1_gpu |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 7 ~ "7 Cores + 1 CUDA",
           threads == 8 ~ "8 Cores + 0 CUDA",
           threads == 15 ~ "7 Cores + HT + 1 CUDA",
           threads == 16 ~ "8 Cores + HT + 0 CUDA")) -> tupi1_gpu
tupi1_gpu$config = as.factor(tupi1_gpu$config)
tupi1_gpu$CUDA = as.factor(ifelse(tupi1_gpu$threads %% 2, "Com thread CUDA", "Sem thread CUDA"))

# excluindo pior desempenho
tupi1_gpu |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi1_gpu_sliced

tupi1_gpu_sliced |>
  ggplot(aes(x = nb, y=time, color=config, shape=CUDA)) +
  geom_point(position=position_dodge2(width=300), size=2) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  scale_shape_manual(values = c(18, 5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  expand_limits(x = 0, y = 0) -> plot

tupi1_gpu_sliced |> filter (nb < 8192) |>
  ggplot(aes(x = nb, y=time, color=config, shape=CUDA)) +
  geom_point(position=position_dodge2(width=300), size=2) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096)) +
  scale_shape_manual(values = c(18, 5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  expand_limits(x = 0, y = 0) -> zoomed_plot

ggsave(paste0("experiments/", title, ".png"), plot)
ggsave(paste0("experiments/", title, "_zoomed.png"), zoomed_plot)
#+end_src
** GPU i9
#+begin_src bash :results silent
EXP='tupi4_gpu_performance_4'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi4_gpu_performance_4'
tupi4_gpu <- read.csv(paste0('experiments/', title, '.csv'))
tupi4_gpu$node = 'tupi4'

tupi4_gpu |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 7 ~ "7 P-cores + 1 CUDA",
           threads == 8 ~ "8 P-cores + 0 CUDA",
           threads == 15 ~ "7 P-cores + HT + 1 CUDA",
           threads == 16 ~ "8 P-cores + HT + 0 CUDA",
           threads == 23 ~ "7 P-cores + 16 E-cores + 1 CUDA",
           threads == 24 ~ "8 P-cores + 16 E-cores + 0 CUDA",
           threads == 31 ~ "7 P-cores + HT + 16 E-cores + 1 CUDA",
           threads == 32 ~ "8 P-cores + HT + 16 E-cores + 0 CUDA")) -> tupi4_gpu
tupi4_gpu$config = as.factor(tupi4_gpu$config)
tupi4_gpu$CUDA = as.factor(ifelse(tupi4_gpu$threads %% 2, "Com thread CUDA", "Sem thread CUDA"))

# excluindo pior desempenho
tupi4_gpu |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi4_gpu_sliced

tupi4_gpu_sliced |>
  ggplot(aes(x = nb, y=time, color=config, shape=CUDA)) +
  geom_point(position=position_dodge2(width=800), size=2.5) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  scale_shape_manual(values = c(18, 5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  expand_limits(x = 0, y = 0) -> plot_all

tupi4_gpu_sliced |> filter(nb > 512 & nb < 8192) |>
  ggplot(aes(x = nb, y=time, color=config, shape=CUDA)) +
  geom_point(position=position_dodge2(width=800), size=2.5) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  scale_shape_manual(values = c(18, 5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  expand_limits(x = 0, y = 0) -> plot_zoomed

# no cuda-exclusive cores
tupi4_gpu_sliced |> filter(nb > 512 & nb < 8192 & threads%%2 == 0) |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot_cudanoexc

tupi4_gpu_sliced |> filter(nb > 512 & nb < 8192 & threads%%2 != 0) |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot_cudaexc

ggsave(paste0("experiments/", title, ".png"), plot_all)
ggsave(paste0("experiments/", title, "_zoomed.png"), plot_zoomed)
ggsave(paste0("experiments/", title, "_cudanoexc.png"), plot_cudanoexc)
ggsave(paste0("experiments/", title, "_cudaexc.png"), plot_cudaexc)
#+end_src
** GPU geral
#+begin_src R :results silent :session *R* :exports both
df <- bind_rows(tupi1_gpu_sliced, tupi4_gpu_sliced)

min_t_row = df[which.min(df$time),]
min_t = min_t_row$time

threshold_t = 2.8*min_t

df |> 
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 12000, y = threshold_t+9, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_gpu + tupi4_gpu', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot_gpu

df |> filter(nb > 512 & nb < 8192) |>
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 2800, y = threshold_t+.8, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_gpu + tupi4_gpu', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot_gpu_zoomed

best_row_tupi1 = tupi1_gpu_sliced[which.min(tupi1_gpu_sliced$time),]
best_row_tupi4 = tupi4_gpu_sliced[which.min(tupi4_gpu_sliced$time),]

df |>
  filter((node == 'tupi1' & nb == best_row_tupi1$nb & threads == best_row_tupi1$threads) |
         (node == 'tupi4' & nb == best_row_tupi4$nb & threads == best_row_tupi4$threads)) |>
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 1500, y = threshold_t+0.2, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_gpu + tupi4_gpu', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(best_row_tupi1$nb, best_row_tupi4$nb)) +
  expand_limits(x = 0, y = 0) -> plot_gpu_best

ggsave("experiments/plot_gpu_only.png", plot_gpu)
ggsave("experiments/plot_gpu_only_zoomed.png", plot_gpu_zoomed)
ggsave("experiments/plot_gpu_only_best.png", plot_gpu_best)

#+end_src
#+begin_src R :results output :session *R* :exports both
best_row_tupi1$time
best_row_tupi4$time
best_row_tupi1$time/best_row_tupi4$time
#+end_src

#+RESULTS:
: [1] 5.775007
: [1] 4.282219
: [1] 1.348602

** GPU Xeon 100k
#+begin_src bash :results silent
EXP='tupi1_gpu_performance_100k_1'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops,cfg" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou | paste -d '' - - >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi1_gpu_performance_100k_1'
tupi1_gpu_100k <- read.csv(paste0('experiments/', title, '.csv'))
tupi1_gpu_100k$node = 'tupi1'

tupi1_gpu_100k |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 7 ~ "7 Cores + 1 CUDA",
           threads == 8 ~ "8 Cores + 0 CUDA",
           threads == 15 ~ "7 Cores + HT + 1 CUDA",
           threads == 16 ~ "8 Cores + HT + 0 CUDA")) -> tupi1_gpu_100k
tupi1_gpu_100k$config = as.factor(tupi1_gpu_100k$config)
tupi1_gpu_100k$CUDA = as.factor(ifelse(tupi1_gpu_100k$threads %% 2, "Com thread CUDA", "Sem thread CUDA"))

# excluindo pior desempenho
tupi1_gpu_100k |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi1_gpu_100k_sliced

tupi1_gpu_100k_sliced |>
  ggplot(aes(x = nb, y=time, color=config, shape=CUDA)) +
  geom_point(position=position_dodge2(width=300), size=2) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(1024, 2048, 4096)) +
  scale_shape_manual(values = c(18, 5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  expand_limits(x = 0, y = 0) -> plot

ggsave(paste0("experiments/", title, ".png"), plot)
#+end_src
** GPU i9 100k
#+begin_src bash :results silent
EXP='tupi3_gpu_performance_100k_3'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi3_gpu_performance_100k_3'
tupi3_gpu_100k <- read.csv(paste0('experiments/', title, '.csv'))
tupi3_gpu_100k$node = 'tupi4'

tupi3_gpu_100k |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 7 ~ "7 P-cores + 1 CUDA",
           threads == 8 ~ "8 P-cores + 0 CUDA",
           threads == 15 ~ "7 P-cores + HT + 1 CUDA",
           threads == 16 ~ "8 P-cores + HT + 0 CUDA",
           threads == 23 ~ "7 P-cores + 16 E-cores + 1 CUDA",
           threads == 24 ~ "8 P-cores + 16 E-cores + 0 CUDA",
           threads == 31 ~ "7 P-cores + HT + 16 E-cores + 1 CUDA",
           threads == 32 ~ "8 P-cores + HT + 16 E-cores + 0 CUDA")) -> tupi3_gpu_100k
tupi3_gpu_100k$config = as.factor(tupi3_gpu_100k$config)
tupi3_gpu_100k$CUDA = as.factor(ifelse(tupi3_gpu_100k$threads %% 2, "Com thread CUDA", "Sem thread CUDA"))

# excluindo pior desempenho
tupi3_gpu_100k |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi3_gpu_100k_sliced

tupi3_gpu_100k_sliced |>
  ggplot(aes(x = nb, y=time, color=config, shape=CUDA)) +
  geom_point(position=position_dodge2(width=800), size=2.5) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  scale_shape_manual(values = c(18, 5)) +
  theme(axis.text.x = element_text(angle = 90)) +
  expand_limits(x = 0, y = 0) -> plot_all

ggsave(paste0("experiments/", title, ".png"), plot_all)
#+end_src

** GPU 100k geral
#+begin_src R :results silent :session *R* :exports both
df <- bind_rows(tupi1_gpu_100k_sliced, tupi3_gpu_100k_sliced)

min_t_row = df[which.min(df$time),]
min_t = min_t_row$time

threshold_t = 2.8*min_t

df |> 
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 3000, y = threshold_t+7, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_gpu_100k + tupi3_gpu_100k', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot_gpu

df |> filter(nb > 512 & nb < 8192) |>
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 3000, y = threshold_t+4, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_gpu_100k + tupi3_gpu_100k', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(512, 1024, 2048, 4096, 8192, 16384)) +
  expand_limits(x = 0, y = 0) -> plot_gpu_zoomed

best_row_tupi1_100k = tupi1_gpu_100k_sliced[which.min(tupi1_gpu_100k_sliced$time),]
best_row_tupi3_100k = tupi3_gpu_100k_sliced[which.min(tupi3_gpu_100k_sliced$time),]

df |>
  filter((node == 'tupi1' & nb == best_row_tupi1_100k$nb & threads == best_row_tupi1_100k$threads) |
         (node == 'tupi4' & nb == best_row_tupi3_100k$nb & threads == best_row_tupi3_100k$threads)) |>
  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
  geom_point(position=position_dodge2(width=500), size=2) +
  theme_bw() +
  geom_hline(yintercept = threshold_t, linetype="dotted", color = "red", size=.3) +
  annotate("text", x = 1500, y = threshold_t+1, size=3, label="2.8 * min_t@i9", color="red") +
  labs(title = 'tupi1_gpu_100k + tupi3_gpu_100k', x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração"),
         shape = guide_legend(title = "Nó")) +
  scale_x_continuous(breaks=c(best_row_tupi1$nb, best_row_tupi4$nb)) +
  expand_limits(x = 0, y = 0) -> plot_gpu_best

ggsave("experiments/plot_gpu_only_100k.png", plot_gpu)
ggsave("experiments/plot_gpu_only_100k_zoomed.png", plot_gpu_zoomed)
ggsave("experiments/plot_gpu_only_100k_best.png", plot_gpu_best)

#+end_src
#+begin_src R :results output :session *R* :exports both
best_row_tupi1_100k$time
best_row_tupi3_100k$time
best_row_tupi1_100k$time/best_row_tupi3_100k$time
#+end_src

#+RESULTS:
: [1] 37.10758
: [1] 20.86412
: [1] 1.778536


** CPU i9 non homo - fora
#+begin_src bash :results silent
EXP='tupi3_cpu_only_non_homogeneous_performance_2'
echo "Id,Function,threads,gpus,P,Q,mtxfmt,nb,m,n,lda,seedA,bump,tsub,time,gflops" > experiments/${EXP}.csv && sed '/;/!d;/Id/d;s/;/,/g' experiments/${EXP}.ou >> experiments/${EXP}.csv
#+end_src
#+begin_src R :results silent :session *R* :exports both
library(dplyr)
library(ggplot2)

title <- 'tupi3_cpu_only_non_homogeneous_performance_2'
tupi3_nonh <- read.csv(paste0('experiments/', title, '.csv'))
tupi3_nonh$node = 'tupi3_nonh'

tupi3_nonh |>
  group_by(threads) |>
  mutate(config = case_when(
           threads == 8 ~ "8 P-Cores",
           threads == 16 ~ "8 P-Cores + HT",
           threads == 24 ~ "8 P-Cores + 16 E-Cores",
           threads == 32 ~ "8 P-Cores + HT + 16 E-Cores")) -> tupi3_nonh
tupi3_nonh$config = as.factor(tupi3_nonh$config)

# excluindo o pior desempenho
tupi3_nonh |> group_by(nb, threads) |> arrange(time) |> slice(0:(n()-1)) -> tupi3_nonh_sliced

tupi3_nonh_sliced |>
  ggplot(aes(x = nb, y=time, color=config)) +
  geom_point(position=position_dodge2(width=100)) +
  theme_bw() +
  labs(title = title, x = "Tamanho do bloco", y = "Tempo de execução (s)") +
  guides(color = guide_legend(title = "Configuração")) +
  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
  expand_limits(x = 0, y = 0) -> plot_nonh
#+end_src

* Análises pós apresentação
** CPU
#+begin_src R :results silent :session *R* :exports both
df <- bind_rows(tupi1_sliced, tupi4_sliced)

df |>
  select(threads, gpus, nb, m, n, config, time, node) |>
  group_by(threads, gpus, nb, m, n, config, node) |>
  mutate(avg_time = mean(time),
         sd = sd(time)) -> cpu_df_sd

cpu_df_sd$nb = as.factor(cpu_df_sd$nb)

cpu_df_sd |>
  ggplot(aes(x = nb, y=avg_time, fill=config)) +
  geom_bar(stat='identity', color='black', linewidth=0.2,  position=position_dodge()) +
  geom_errorbar(aes(ymin=avg_time-sd, ymax=avg_time+sd),
                width=.5,
                linewidth=.3,
                position=position_dodge(0.9)) +
    scale_fill_manual(values=c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#b3de69','#fccde5','#d9d9d9','#bc80bd','#ccebc5','#ffed6f')) +
  theme_bw(base_size=12) +
  theme(legend.text=element_text(size=11)) +
  labs(title = 'CPU-only performance', x = "Block size", y = "Execution time (s)") +
  guides(fill = guide_legend(title = "Configuration"),
         shape = guide_legend(title = "Node")) -> plot_cpu


#cpu_df_sd |>
#  ggplot(aes(x = nb, y=avg_time, group=config, color=config)) +
#  geom_line() +
#  geom_pointrange(aes(ymin=avg_time-sd, ymax=avg_time+sd))
#df |>
#  ggplot(aes(x = nb, y=time, color=config, shape=node)) +
#  geom_point(position=position_dodge2(width=500), size=2.5) +
#  theme_bw(base_size=14) +
#  labs(title = 'tupi1_cpu + tupi4_cpu', x = "Block size", y = "Execution time (s)") +
#  guides(color = guide_legend(title = "Configuration"),
#         shape = guide_legend(title = "Node")) +
#  scale_x_continuous(breaks=c(256, 512, 1024, 2048, 4096)) +
#  theme(axis.text.x = element_text(angle = 90)) +
#  expand_limits(x = 0, y = 0) -> plot_all
#
ggsave("figures/cpu_only.pdf", plot_cpu)

#+end_src
**

** GPU geral
#+begin_src R :results silent :session *R* :exports both
df <- bind_rows(tupi1_gpu_sliced, tupi4_gpu_sliced)

df |>
  filter(nb < 8000) |>
  select(threads, gpus, nb, m, n, config, time, node) |>
  group_by(threads, gpus, nb, m, n, config, node) |>
  mutate(avg_time = mean(time),
         sd = sd(time)) -> gpu_df_sd

gpu_df_sd$nb = as.factor(gpu_df_sd$nb)

gpu_df_sd$config = gsub(" \\+ [0-1] CUDA","",gpu_df_sd$config)

gpu_df_sd |>
  ggplot(aes(x = nb, y=avg_time, fill=config)) +
  geom_bar(stat='identity', color='black', linewidth=0.2,  position=position_dodge()) +
  geom_errorbar(aes(ymin=avg_time-sd, ymax=avg_time+sd),
                width=.5,
                linewidth=.3,
                position=position_dodge(0.9)) +
  facet_wrap(gpu_df_sd$threads%%2,
             labeller = as_labeller(
               c("0"="Without CUDA dedicated core", "1"="With CUDA dedicated core"))) +
  scale_fill_manual(values=c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462')) +
  theme_bw(base_size=12) +
  theme(legend.key.size=unit(.75, "line"), legend.title=element_text(size=10), legend.text=element_text(size=9)) +
  labs(title = "Tupi performance", x = "Block size", y = "Execution time (s)") +
  guides(fill = guide_legend(title = "Configuration"),
         shape = guide_legend(title = "Node")) -> plot_tupi_cuda

ggsave("figures/tupi.pdf", plot_tupi_cuda)
#+end_src
#+begin_src R :results output :session *R* :exports both
best_row_tupi1$time
best_row_tupi4$time
best_row_tupi1$time/best_row_tupi4$time
#+end_src

#+RESULTS:
: [1] 5.775007
: [1] 4.282219
: [1] 1.348602

** GPU 100k
#+begin_src R :results silent :session *R* :exports both
df <- bind_rows(tupi1_gpu_100k_sliced, tupi3_gpu_100k_sliced)

df |>
  filter(nb < 8000) |>
  select(threads, gpus, nb, m, n, config, time, node) |>
  group_by(threads, gpus, nb, m, n, config, node) |>
  mutate(avg_time = mean(time),
         sd = sd(time)) -> gpu_df_100k_sd

gpu_df_100k_sd$nb = as.factor(gpu_df_100k_sd$nb)

gpu_df_100k_sd$config = gsub(" \\+ [0-1] CUDA","",gpu_df_100k_sd$config)

gpu_df_100k_sd |>
  ggplot(aes(x = nb, y=avg_time, fill=config)) +
  geom_bar(stat='identity', color='black', linewidth=0.2,  position=position_dodge()) +
  geom_errorbar(aes(ymin=avg_time-sd, ymax=avg_time+sd),
                width=.5,
                linewidth=.3,
                position=position_dodge(0.9)) +
  facet_wrap(gpu_df_100k_sd$threads%%2,
             labeller = as_labeller(
               c("0"="Without CUDA dedicated core", "1"="With CUDA dedicated core"))) +
  scale_fill_manual(values=c('#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462','#8dd3c7','#ffffb3','#bebada','#fb8072','#80b1d3','#fdb462')) +
  theme_bw(base_size=12) +
  theme(legend.key.size=unit(.75, "line"), legend.title=element_text(size=10), legend.text=element_text(size=9)) +
  labs(title = "Tupi 100k performance", x = "Block size", y = "Execution time (s)") +
  guides(fill = guide_legend(title = "Configuration"),
         shape = guide_legend(title = "Node")) -> plot_tupi_cuda

ggsave("figures/tupi_100k.pdf", plot_tupi_cuda)
#+end_src
#+begin_src R :results output :session *R* :exports both
best_row_tupi1$time
best_row_tupi4$time
best_row_tupi1$time/best_row_tupi4$time
#+end_src

#+RESULTS:
: Error: object 'best_row_tupi1' not found
: Error: object 'best_row_tupi4' not found
: Error: object 'best_row_tupi1' not found

* Script extra
** GPU i9 CUDA E-core
#+begin_src bash
NODE="tupi4"
JOB_NAME="gpu_ecore_performance"
VERSION=1 # remember to increment if needed
SCRIPT_NAME="scripts/${NODE}_${JOB_NAME}_${VERSION}.slurm"
TESTING_DIR="~/spack/opt/spack/linux-debian12-skylake/gcc-11.3.0/chameleon-1.2.0-vlmjaqjmrhhqbpocl7utrsvlxfbnutfm/bin"

# slurm section
echo "#!/bin/bash"                            > ${SCRIPT_NAME}
echo "#SBATCH --job-name=${JOB_NAME}"          >> ${SCRIPT_NAME}
echo "#SBATCH --partition=tupi"                >> ${SCRIPT_NAME}
echo "#SBATCH --nodelist=${NODE}"              >> ${SCRIPT_NAME}
echo "#SBATCH --time=23:30:00  "               >> ${SCRIPT_NAME}
echo "#SBATCH --output=experiments/${NODE}_${JOB_NAME}_${VERSION}.ou" >> ${SCRIPT_NAME}
echo "#SBATCH --error=experiments/${NODE}_${JOB_NAME}_${VERSION}.err" >> ${SCRIPT_NAME}

echo "export STARPU_DISPLAY_BINDINGS=1" >> ${SCRIPT_NAME}
echo "export STARPU_SCHED=dmdas" >> ${SCRIPT_NAME}

echo "rm ~/.starpu/sampling/codelets/45/*.tupi4" >> ${SCRIPT_NAME}

# 8 P-cores + 1 CUDA E-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"16 0 2 4 6 8 10 12 14\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 8 -g 1 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT + 1 CUDA E-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"16 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 16 -g 1 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores + 15 E-cores + 1 CUDA E-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"16 0 2 4 6 8 10 12 14 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting \
	-o getrf_nopiv -t 23 -g 1 -n 65536 -b ${i}" >> temp
    done
done

# 8 P-cores with HT + 15 E-cores + 1 CUDA E-core
for i in 512 1024 2048 4096 8192 16384
do
    for j in 1 2 3 4 5 6
    do
	echo "STARPU_WORKERS_CPUID=\"16 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\" ${TESTING_DIR}/chameleon_stesting -o \
	getrf_nopiv -t 31 -g 1 -n 65536 -b ${i}" >> temp
    done
done

cat temp | shuf >> ${SCRIPT_NAME}
rm temp

rsync --verbose --progress --recursive ${SCRIPT_NAME} lbassis@gppd-hpc.inf.ufrgs.br:~/scripts
#+end_src

#+RESULTS:
| sending                             | incremental | file  | list     |         |       |           |           |          |         |         |             |
| tupi4_gpu_ecore_performance_1.slurm |             |       |          |         |       |           |           |          |         |         |             |
|                                   | 32,768      | 92%   | 0.00kB/s | 0:00:00 |     | 35,598    |      100% | 2.70MB/s | 0:00:00 | (xfr#1, | to-chk=0/1) |
|                                     |             |       |          |         |       |           |           |          |         |         |             |
| sent                                | 35,722      | bytes | received |      35 | bytes | 14,302.80 | bytes/sec |          |         |         |             |
| total                               | size        | is    | 35,598   | speedup | is    | 1.0       |           |          |         |         |             |

